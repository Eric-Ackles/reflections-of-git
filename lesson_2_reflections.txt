What happens when you initialize a repository? Why do you need to do it?
    
    1) A ".git" folder was created to store snapshots and other information.
    2) The ".git" folder works as a container. We have to create it first.
    
How is the staging area different from the working directory and the
repository? What value do you think it offers?

    1) Staging area works a temporary container.
    2) You can select what to commit.
    
How can you use the staging area to make sure you have one commit per logical change?

    1) You can select the files that you want to commit.
    2) But if you make too much change to a single file, this will not help.
    
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    
    1) A branch may be helpful if we want to try something out.
    2) It is also helpful if there are multiple persons working on the same project.

How do the diagrams help you visualize the branch structure?
    
    1) We can see where we are now more clearly.
    2) We can have a better understanding about the history of the project.
    
    
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    1) The two branches should have a common parent, and all operations are kept.
    2) Using diagram makes the history easier to be tracked.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    1) It saves you from copying and pasting codes.
    2) You don't have to read code that you are not expert in.
    3) It may be hard to resolve the conflicts if too much changes are made to the same code area.
